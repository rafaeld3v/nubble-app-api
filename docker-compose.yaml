version: '3.8'

services:

  postgres:
    container_name: ${CONTAINER_NAME}-postgres
    image: postgres:${PG_VERSION:-14}
    restart: always
    environment:
      DATABASE_HOST: ${PG_HOST:-localhost}
      POSTGRES_USER: ${PG_USER:-api_coffstack}
      POSTGRES_PASSWORD: ${PG_PASSWORD:-api_coffstack}
      POSTGRES_DB: ${PG_DB_NAME:-api_coffstack_db_testing}
      TZ: ${CONTAINER_TIMEZONE:-America/Sao_Paulo}
      PGTZ: ${CONTAINER_TIMEZONE:-America/Sao_Paulo}
    ports:
      - '${PG_PORT:-5432}:5432'
    volumes:
      - pg_storage:/var/lib/postgresql/data
      - ./dump/init-dev.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - backend

  pgadmin:
    container_name: ${CONTAINER_NAME}-pgadmin
    image: dpage/pgadmin4:7.5
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - '${PGADMIN_PORT:-8030}:80'
    depends_on:
      - postgres
    networks:
      - backend

  web:
    container_name: ${CONTAINER_NAME}-web
    restart: always
    build:
      context: .
      target: dependencies
    ports:
      - ${PORT:-3333}:${PORT:-3333}
      - 9229:9229
    env_file:
      - .env
    environment:
      PG_HOST: postgres
    volumes:
      - ./:/home/node
      - /home/node/node_modules
    command: dumb-init node ace serve --watch --node-args="--inspect=0.0.0.0"
    depends_on:
      - postgres
    networks:
      - backend

  mailpit:
    container_name: ${CONTAINER_NAME}-mailpit
    restart: unless-stopped
    image: axllent/mailpit:latest
    environment:
      TZ: ${CONTAINER_TIMEZONE:-America/Sao_Paulo}
    volumes:
      - mailpit_storage:/data
    ports:
      - '${MAIL_PORT:-1025}:1025'
      - '${MAILPIT_DASHBOARD_PORT:-8040}:8025'
    networks:
      - backend

networks:
  backend:
    name: ${CONTAINER_NAME}-net
    driver: bridge

volumes:
  pg_storage:
  mailpit_storage:
